
name: Tests

# Controls when the action will run.
on:
  push:
    branches: [ main ]
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
        cache: 'poetry'
    - name: Install dependencies
      run: |
        python -m pip install nox_poetry
    - name: Set pystow dir windows
      run: |
            echo "PYSTOW_HOME=" >> $env:GITHUB_ENV
            echo "PYSTOW_NAME=data" >> $env:GITHUB_ENV
    - name: Cache dataset downloads
      uses: actions/cache@v3
      with:
        path: data
        key: alwaysthesame
        enableCrossOsArchive: True
    - name: Test with nox
      run: nox -s tests

  other:
    needs: windows
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, "3.11"]
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
    - name: Install dependencies
      run: |
        python -m pip install nox_poetry
    - name: Set pystow dir
      run: |
            echo "PYSTOW_HOME=" >> $GITHUB_ENV
            echo "PYSTOW_NAME=data" >> $GITHUB_ENV
    - name: Cache dataset downloads
      uses: actions/cache/restore@v3
      with:
        path: data
        key: alwaysthesame
        enableCrossOsArchive: True
    - name: Test with nox
      run: nox -s tests
